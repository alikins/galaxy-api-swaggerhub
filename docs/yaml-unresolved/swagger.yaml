info:
  description: Galaxy 3.2 API (wip)
  title: Galaxy 3.2 API (wip)
  version: "1.1.5"
  contact:
    url: https://github.com/ansible/galaxy/issues
    name: Ansible Galaxy Issues
openapi: 3.0.0
servers:
  - url: https://galaxy.ansible.com/
    description: Production server (uses live data)
  - url: https://galaxy-dev.ansible.com/
    description: shared public dev server
  - url: http://localhost:8000
    description: local sandbox
paths:
  /api/:
    get:
      operationId: GetAPI
      tags:
        - introspection
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: some response
  /api/internal/me/notifications/:
    get:
      operationId: GetMeNotifications
      summary: List active user notifications
      tags:
        - internal
        - notifications
        - me
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collection:
                    readOnly: true
                    type: string
                  created:
                    description: Timestamp when this user notification was created.
                    readOnly: true
                    type: string
                  id:
                    description: Database ID for this user notification.
                    readOnly: true
                    type: integer
                  message:
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user notification was last modified.
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repository:
                    readOnly: true
                    type: string
                  seen:
                    type: boolean
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user notification.
                    readOnly: true
                    type: string
          description: some response
  /api/internal/me/notifications/clear/:
    delete:
      operationId: DeleteMeNotificationsClear
      tags:
        - internal
        - notifications
        - me
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: some response
    put:
      operationId: PutMeNotificationsClear
      tags:
        - internal
        - notifications
        - me
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: some response
  '/api/internal/me/notifications/{id}/':
    delete:
      operationId: DeleteMeNotificationsClearDetail
      tags:
        - internal
        - notifications
        - me
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collection:
                    readOnly: true
                    type: string
                  created:
                    description: Timestamp when this user notification was created.
                    readOnly: true
                    type: string
                  id:
                    description: Database ID for this user notification.
                    readOnly: true
                    type: integer
                  message:
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user notification was last modified.
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repository:
                    readOnly: true
                    type: string
                  seen:
                    type: boolean
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user notification.
                    readOnly: true
                    type: string
          description: some response
    get:
      operationId: GetMeNotificationDetail
      tags:
        - internal
        - notifications
        - me
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collection:
                    readOnly: true
                    type: string
                  created:
                    description: Timestamp when this user notification was created.
                    readOnly: true
                    type: string
                  id:
                    description: Database ID for this user notification.
                    readOnly: true
                    type: integer
                  message:
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user notification was last modified.
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repository:
                    readOnly: true
                    type: string
                  seen:
                    type: boolean
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user notification.
                    readOnly: true
                    type: string
          description: some response
    patch:
      operationId: PatchMeNotificationsDetail
      tags:
        - internal
        - notifications
        - me
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                seen:
                  type: boolean
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collection:
                    readOnly: true
                    type: string
                  created:
                    description: Timestamp when this user notification was created.
                    readOnly: true
                    type: string
                  id:
                    description: Database ID for this user notification.
                    readOnly: true
                    type: integer
                  message:
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user notification was last modified.
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repository:
                    readOnly: true
                    type: string
                  seen:
                    type: boolean
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user notification.
                    readOnly: true
                    type: string
          description: some response
    put:
      operationId: PutMeNotificationsDetail
      tags:
        - internal
        - notifications
        - me
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                seen:
                  type: boolean
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collection:
                    readOnly: true
                    type: string
                  created:
                    description: Timestamp when this user notification was created.
                    readOnly: true
                    type: string
                  id:
                    description: Database ID for this user notification.
                    readOnly: true
                    type: integer
                  message:
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user notification was last modified.
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repository:
                    readOnly: true
                    type: string
                  seen:
                    type: boolean
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user notification.
                    readOnly: true
                    type: string
          description: some response
  /api/internal/me/preferences/:
    get:
      operationId: GetInternalMePreferences
      tags:
        - internal
        - me
      parameters:
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collections_followed:
                    items:
                      type: integer
                    type: array
                  created:
                    description: Timestamp when this user preferences was created.
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user preferences was last modified.
                    readOnly: true
                    type: string
                  namespaces_followed:
                    items:
                      type: integer
                    type: array
                  preferences:
                    type: object
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repositories_followed:
                    items:
                      type: integer
                    type: array
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user preferences.
                    readOnly: true
                    type: string
                required:
                  - preferences
          description: some response
    patch:
      operationId: PatchInternalMePreferences
      tags:
        - internal
        - me
      parameters:
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                collections_followed:
                  items:
                    type: integer
                  type: array
                namespaces_followed:
                  items:
                    type: integer
                  type: array
                preferences:
                  type: object
                repositories_followed:
                  items:
                    type: integer
                  type: array
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collections_followed:
                    items:
                      type: integer
                    type: array
                  created:
                    description: Timestamp when this user preferences was created.
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user preferences was last modified.
                    readOnly: true
                    type: string
                  namespaces_followed:
                    items:
                      type: integer
                    type: array
                  preferences:
                    type: object
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repositories_followed:
                    items:
                      type: integer
                    type: array
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user preferences.
                    readOnly: true
                    type: string
                required:
                  - preferences
          description: some response
    put:
      operationId: PutInternalMePreferences
      tags:
        - internal
        - me
      parameters:
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                collections_followed:
                  items:
                    type: integer
                  type: array
                namespaces_followed:
                  items:
                    type: integer
                  type: array
                preferences:
                  type: object
                repositories_followed:
                  items:
                    type: integer
                  type: array
              required:
                - preferences
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  collections_followed:
                    items:
                      type: integer
                    type: array
                  created:
                    description: Timestamp when this user preferences was created.
                    readOnly: true
                    type: string
                  modified:
                    description: Timestamp when this user preferences was last modified.
                    readOnly: true
                    type: string
                  namespaces_followed:
                    items:
                      type: integer
                    type: array
                  preferences:
                    type: object
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  repositories_followed:
                    items:
                      type: integer
                    type: array
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user preferences.
                    readOnly: true
                    type: string
                required:
                  - preferences
          description: some response
  /api/internal/ui/collections/:
    get:
      operationId: GetInternalUICollections
      tags:
        - internal
        - collections
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  community_score:
                    nullable: true
                    type: number
                  community_survey_count:
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  created:
                    format: date-time
                    readOnly: true
                    type: string
                  deprecated:
                    type: boolean
                  download_count:
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  id:
                    readOnly: true
                    type: integer
                  latest_version:
                    properties:
                      content_summary:
                        readOnly: true
                        type: string
                      created:
                        format: date-time
                        readOnly: true
                        type: string
                      metadata:
                        type: object
                      modified:
                        format: date-time
                        readOnly: true
                        type: string
                      pk:
                        readOnly: true
                        type: integer
                      quality_score:
                        maximum: 5
                        minimum: 0
                        nullable: true
                        type: number
                      version:
                        maxLength: 64
                        type: string
                    required:
                      - version
                    type: object
                  modified:
                    format: date-time
                    readOnly: true
                    type: string
                  name:
                    maxLength: 64
                    type: string
                  namespace:
                    properties:
                      active:
                        type: boolean
                      avatar_url:
                        maxLength: 256
                        nullable: true
                        type: string
                      company:
                        maxLength: 256
                        nullable: true
                        type: string
                      created:
                        format: date-time
                        readOnly: true
                        type: string
                      description:
                        maxLength: 255
                        type: string
                      email:
                        maxLength: 256
                        nullable: true
                        type: string
                      html_url:
                        maxLength: 256
                        nullable: true
                        type: string
                      id:
                        readOnly: true
                        type: integer
                      is_vendor:
                        type: boolean
                      location:
                        maxLength: 256
                        nullable: true
                        type: string
                      modified:
                        format: date-time
                        readOnly: true
                        type: string
                      name:
                        maxLength: 512
                        type: string
                      owners:
                        items:
                          type: integer
                        type: array
                    readOnly: true
                    required:
                      - name
                      - owners
                    type: object
                required:
                  - name
                  - latest_version
          description: some response
  '/api/internal/ui/collections/{id}/':
    patch:
      operationId: PatchInternalUiCollectionDetail
      tags:
        - internal
        - collections
      parameters:
        - description: A unique integer value identifying this collection.
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deprecated:
                  type: boolean
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  deprecated:
                    type: boolean
                  id:
                    readOnly: true
                    type: integer
                  name:
                    readOnly: true
                    type: string
          description: some response
    put:
      operationId: PutInternalCollectionsDetail
      tags:
        - internal
        - collections
      parameters:
        - description: A unique integer value identifying this collection.
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deprecated:
                  type: boolean
        description: some body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  deprecated:
                    type: boolean
                  id:
                    readOnly: true
                    type: integer
                  name:
                    readOnly: true
                    type: string
          description: some response
  '/api/internal/ui/collections/{namespace__name}/{name}/':
    get:
      operationId: GetInternalUiCollectionsDetailByNamespaceName
      tags:
        - internal
        - collections
      parameters:
        - description: ''
          in: path
          name: namespace__name
          required: true
          schema:
            type: string
        - description: ''
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  all_versions:
                    readOnly: true
                    type: string
                  community_score:
                    nullable: true
                    type: number
                  community_survey_count:
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  created:
                    format: date-time
                    readOnly: true
                    type: string
                  deprecated:
                    type: boolean
                  download_count:
                    maximum: 2147483647
                    minimum: -2147483648
                    type: integer
                  id:
                    readOnly: true
                    type: integer
                  latest_version:
                    properties:
                      contents:
                        type: object
                      created:
                        format: date-time
                        readOnly: true
                        type: string
                      metadata:
                        type: object
                      modified:
                        format: date-time
                        readOnly: true
                        type: string
                      pk:
                        readOnly: true
                        type: integer
                      quality_score:
                        maximum: 5
                        minimum: 0
                        nullable: true
                        type: number
                      readme_html:
                        type: string
                      version:
                        maxLength: 64
                        type: string
                    required:
                      - version
                      - metadata
                      - contents
                    type: object
                  modified:
                    format: date-time
                    readOnly: true
                    type: string
                  name:
                    maxLength: 64
                    type: string
                  namespace:
                    properties:
                      active:
                        type: boolean
                      avatar_url:
                        maxLength: 256
                        nullable: true
                        type: string
                      company:
                        maxLength: 256
                        nullable: true
                        type: string
                      created:
                        format: date-time
                        readOnly: true
                        type: string
                      description:
                        maxLength: 255
                        type: string
                      email:
                        maxLength: 256
                        nullable: true
                        type: string
                      html_url:
                        maxLength: 256
                        nullable: true
                        type: string
                      id:
                        readOnly: true
                        type: integer
                      is_vendor:
                        type: boolean
                      location:
                        maxLength: 256
                        nullable: true
                        type: string
                      modified:
                        format: date-time
                        readOnly: true
                        type: string
                      name:
                        maxLength: 512
                        type: string
                      owners:
                        items:
                          type: integer
                        type: array
                    readOnly: true
                    required:
                      - name
                      - owners
                    type: object
                required:
                  - name
                  - latest_version
          description: some response
  '/api/internal/ui/namespaces/{namespace_id}/imports/':
    get:
      operationId: GetInternalUIImportsByNamespaceId
      tags:
        - internal
        - namespaces
      parameters:
        - description: ''
          in: path
          name: namespace_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  finished_at:
                    format: date-time
                    type: string
                  href:
                    readOnly: true
                    type: string
                  id:
                    readOnly: true
                    type: integer
                  name:
                    maxLength: 64
                    type: string
                  namespace:
                    readOnly: true
                    type: string
                  started_at:
                    format: date-time
                    type: string
                  state:
                    type: string
                  type:
                    readOnly: true
                    type: string
                  version:
                    maxLength: 64
                    type: string
                required:
                  - state
                  - started_at
                  - finished_at
                  - name
                  - version
          description: some response
  /api/internal/ui/search/:
    get:
      operationId: GetInternalUISearch
      tags:
        - internal
        - search
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: some response
  /api/v1/:
    get:
      operationId: ListApiV1
      tags:
        - introspection
        - v1
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
          description: some response
  /api/v1/me/:
    get:
      operationId: GetMeDetail
      tags:
        - me
        - v1
      parameters:
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    readOnly: true
                    type: string
                  authenticated:
                    readOnly: true
                    type: string
                  avatar_url:
                    maxLength: 256
                    type: string
                  created:
                    description: Timestamp when this user was created.
                    readOnly: true
                    type: string
                  date_joined:
                    format: date-time
                    type: string
                  full_name:
                    maxLength: 254
                    type: string
                  id:
                    description: Database ID for this user.
                    readOnly: true
                    type: integer
                  modified:
                    description: Timestamp when this user was last modified.
                    readOnly: true
                    type: string
                  primary_email:
                    readOnly: true
                    type: string
                  related:
                    description: Data structure with URLs of related resources.
                    readOnly: true
                    type: string
                  staff:
                    readOnly: true
                    type: string
                  summary_fields:
                    description: >-
                      Data structure with name/description for related
                      resources.
                    readOnly: true
                    type: string
                  url:
                    description: URL for this user.
                    readOnly: true
                    type: string
                  username:
                    description: >-
                      Required. 30 characters or fewer. Letters, numbers and
                      @/./+/-/_ characters
                    maxLength: 30
                    pattern: '^[a-zA-Z0-9_.@+-]+$'
                    type: string
                required:
                  - username
          description: some response
  /api/v1/namespaces/:
    get:
      operationId: ListNamespaces
      tags:
        - namespaces
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          $ref: '#/components/responses/Namespaces'

  /api/v1/search/:
    get:
      operationId: ListSearch
      tags:
        - search
        - v1
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: some response
  /api/v1/search/content/:
    get:
      operationId: ListContentSearch
      tags:
        - search
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          $ref: '#/components/responses/Contents'

  /api/v1/search/roles/:
    get:
      operationId: ListRoleSearchView_api_v1_search_roles_
      tags:
        - search
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/PageCount'
                  next:
                    $ref: '#/components/schemas/PageNext'
                  previous:
                    $ref: '#/components/schemas/PagePrevious'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchRolesResult'
          description: A page of Roles search results
  /api/v1/search/tags/:
    get:
      summary: 'Get a list of Tags by searching'
      operationId: SearchTags
      tags:
        - search
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        # TODO: search param tags
      responses:
        '200':
          $ref: '#/components/responses/Tags'
          
  /api/v1/tags/:
    get:
      summary: 'Get a list of Galaxy Tags'
      operationId: ListTags
      tags:
        - tags
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          $ref: '#/components/responses/Tags'
  '/api/v1/tags/{id}/':
    get:
      summary: 'Get a Galaxy Tag'
      operationId: GetTagDetail
      tags:
        - tags
        - v1
      parameters:
        - description: 'Tag id'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          description: 'A Galaxy Tag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
  /api/v1/users/:
    get:
      summary: 'Get a list of Users'
      operationId: ListUsers
      tags:
        - users
        - v1
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          $ref: '#/components/responses/Users'

  '/api/v1/users/{id}/':
    get:
      summary: 'Get an User by id'
      operationId: GetUserById
      tags:
        - users
        - v1
      parameters:
        - description: 'User id'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: some response
    patch:
      summary: 'Patch/update an User by id'
      operationId: PatchUserById
      tags:
        - users
        - v1
      parameters:
        - description: 'User id'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                avatar_url:
                  maxLength: 256
                  type: string
                date_joined:
                  format: date-time
                  type: string
                full_name:
                  maxLength: 254
                  type: string
                username:
                  description: >-
                    Required. 30 characters or fewer. Letters, numbers and
                    @/./+/-/_ characters
                  maxLength: 30
                  pattern: '^[a-zA-Z0-9_.@+-]+$'
                  type: string
        description: some body
      responses:
        '200':
          description: 'The User updated by the PATCH'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  '/api/v2/collection-imports/{id}/':
    get:
      summary: 'Get a Collection-Import (import task) by id'
      operationId: GetCollectionImportById
      tags:
        - collection-imports
        - v2
      parameters:
        - description: 'A unique integer value identifying this collection import.'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          description: 'The result of a collection import'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionImportResult'
  '/api/v2/collection-versions/{id}/artifact/':
    get:
      operationId: GetCollectionVersionArtifactById
      tags:
        - collection-versions
        - v2
      parameters:
        - description: 'The CollectionVersion id'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          description: 'The collection version artifact details with download_url, sha256, and filename'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionArtifactDetail'

  '/api/v2/collection-versions/{version_pk}/':
    get:
      operationId: GetCollectionVersionByVersionPk
      tags:
        - collection-versions
        - v2
      parameters:
        - description: 'The CollectionVersion version_pk'
          in: path
          name: version_pk
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'A CollectionVersion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersion'
  /api/v2/collections/:
    post:
      summary: 'Create a new CollectionVersion by importing a collection artifact'
      operationId: ImportCollectionVersionArtifact
      tags:
        - collections
        - v2
      parameters: []
      requestBody:
        description: "A multipart/form encoded payload including the collection artifact file and it's sha256sum"
        content:
          multipart/form-data:
            schema:
              type: object 
              properties:
                sha256sum:
                  description: 'The sha256sum of the collection artifact file'
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '202':
          $ref: '#/components/responses/CreateCollectionResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
  '/api/v2/collections/{id}/':
    get:
      summary: 'Get a Collection by id'
      operationId: GetCollectionById
      tags:
        - collections
        - v2
      parameters:
        - description: 'The collection id'
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'A Collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'

  '/api/v2/collections/{id}/versions/':
    get:
      summary: 'Get list of versions for a collection id'
      operationId: ListCollectionVersionsById
      tags:
        - collections
        - v2
      parameters:
        - description: 'The id of the Collection'
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          $ref: '#/components/responses/CollectionVersions'
  '/api/v2/collections/{namespace}/{name}/':
    parameters:
      - $ref: '#/components/parameters/CollectionNamespace'
      - $ref: '#/components/parameters/CollectionName'
    get:
      summary: 'Get a Collection by namespace and name'
      operationId: GetCollectionByNamespaceName
      tags:
        - collections
        - v2
      responses:
        '200':
          description: 'A Collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
  '/api/v2/collections/{namespace}/{name}/versions/':
    parameters:
      - $ref: '#/components/parameters/CollectionNamespace'
      - $ref: '#/components/parameters/CollectionName'
    get:
      summary: 'Get a list of CollectionVersions for a Collection by namespace and name'
      operationId: ListCollectionVersionsByNamespaceName
      tags:
        - collections
        - v2
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          $ref: '#/components/responses/CollectionVersions'
  '/api/v2/collections/{namespace}/{name}/versions/{version}/':
    parameters:
      - $ref: '#/components/parameters/CollectionNamespace'
      - $ref: '#/components/parameters/CollectionName'
      - $ref: '#/components/parameters/CollectionVersion'
    get:
      summary: 'Get a CollectionVersion by namespace, name, and version'
      operationId: GetCollectionVersion
      tags:
        - collections
        - v2
      responses:
        '200':
          description: 'A collection version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersion'
          links:
            GetCollectionVersionById:
              operationId: GetCollectionVersionById
              parameters:
                id: '$response.body#/id'
              description: >
                The `id` value returned in the response can be used as
                the `id` parameter in `{method} GET /api/v2/collection-versions/{id}`.
            GetCollectionById:
              operationId: GetCollectionById
              parameters:
                id: '$response.body#/collection/id'
            DownloadArtifactByFilename:
              operationId: DownloadArtifactByFilename
              parameters:
                id: '$response.body#/artifact/filename'
              description: >
                The `filename` value returned in the response can be used as
                the `filename` parameter in `GET /download/{filename}`.
                
  '/api/v2/collections/{namespace}/{name}/versions/{version}/artifact/':
    parameters:
      - $ref: '#/components/parameters/CollectionNamespace'
      - $ref: '#/components/parameters/CollectionName'
      - $ref: '#/components/parameters/CollectionVersion'
    get:
      summary: 'Get Artifact details for a Collection by namespace, name, and version'
      operationId: GetCollectionVersionArtifact
      tags:
        - collections
        - v2
      parameters:
        - $ref: '#/components/parameters/Search'
      responses:
        '200':
          description: 'The collection version artifact details with download_url, sha256, and filename'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionArtifactDetail'

  '/download/{filename}':
    get:
      summary: 'Download the collection artifact'
      operationId: DownloadArtifactByFilename
      tags:
        - download
      parameters:
        - description: 'CollectionVersion artifact filename'
          in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The collection artifact file binary contents'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

components:
  schemas:
    Error:
      type: object
      description: 'Error data'
      properties:
        code:
          description: 'Unique identifier for the error'
          type: string
          example: 'invalid'
        message:
          type: string
          example: 'namespace and name parameters are required'
        field:
          description: 'The name of the field involved'
          type: string
          example: 'namespace'
      required:
        - code
        - message
    APIException:
      type: object
      description: 'API Exception'
      properties:
        code:
          description: 'Unique identifier for the exception'
          type: string
          example: 'not_authenticated'
        message:
          type: string
          example: 'Authentication credentials were not provided.'
        errors:
          description: 'A list of additional error objects'
          type: array
          items:
            $ref: '#/components/schemas/Error'
      required:
        - code
        - message
    ConflictError:
      allOf:
        - $ref: '#/components/schemas/APIException'
    ConflictCollectionExistsError:
      allOf:
        - $ref: '#/components/schemas/ConflictError'
    RepositoryNameError:
      allOf:
        - $ref: '#/components/schemas/ConflictError'
    ArtifactExistsError:
      allOf:
        - $ref: '#/components/schemas/ConflictError'
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/APIException'
    PageCount:
      type: integer
    PageNext:
      type: string
    PagePrevious:
      type: string
    CollectionVersionLink:
      type: object
      properties:
        href:
          description: 'The URL to the CollectionVersion'
          type: string
        version:
          type: string
          maxLength: 64

    CollectionVersionArtifactDetail:
      type: object
      properties:
        download_url:
          readOnly: true
          type: string
        filename:
          readOnly: true
          type: string
        sha256:
          type: string
        size:
          type: integer
    Collection:
      type: object
      properties:
        latest_version:
          $ref: '#/components/schemas/CollectionVersionLink'
        created:
          type: string
        deprecated:
          type: boolean
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/CollectionNamespace'
        modified:
          type: string
        id:
          type: integer
        href:
          type: string
        versions_url:
          type: string
    CollectionImportError:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        traceback:
          type: string
    CollectionImportMessage:
      description: 'Message from collection importer including lint results'
      required:
      - level
      - message
      - time
      type: object
      properties:
        level:
          type: string
        message:
          type: string
        time:
          type: string
          format: date-time
    CollectionImportResult:
      description: 'Collection import result'
      required:
      - error
      - finished_at
      - id
      - job_id
      - lint_records
      - messages
      - name
      - namespace
      - started_at
      - state
      - version
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CollectionImportError'
        finished_at:
          type: string
          format: date-time
        id:
          type: integer
        imported_version:
          type: string
          readOnly: true
        job_id:
          type: string
          format: uuid
        lint_records:
          type: object
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CollectionImportMessage'
        name:
          maxLength: 64
          type: string
        namespace:
          type: string
        started_at:
          type: string
          format: date-time
        state:
          type: string
        version:
          maxLength: 64
          type: string
    CollectionNamespace:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
        href:
          description: 'link to the Namespace'
          type: string
    CollectionVersionDetailCollection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
        href:
          description: 'link to the Collection'
          type: string
    CollectionVersionDetailArtifact:
      type: object
      properties:
        filename:
          type: string
        size:
          type: integer
        sha256:
          type: string
    CollectionVersionDetailMetadata:
      description: "The Collection Version metadata from collections galaxy.yml or MANIFEST.JSON"
      type: object
      properties:
        documentation: {}
        description:
          type: string
        readme:
          type: string
        repository: {}
        issues: {}
        version:
          type: string
        license_file: {}
        tags:
          type: array
          items:
            type: string
        dependencies:
          type: object
        license:
          type: array
          items:
            type: string
        name:
          type: string
        namespace:
          type: string
        authors:
          type: array
          items:
            type: string
        homepage: {}
    CollectionVersion:
      type: object
      properties:
        artifact:
          $ref: '#/components/schemas/CollectionVersionDetailArtifact'   
        metadata:
          $ref: '#/components/schemas/CollectionVersionDetailMetadata'
        hidden:
          type: boolean
        download_url:
          type: string
        namespace:
          $ref: '#/components/schemas/CollectionNamespace'
        id:
          type: integer
        href:
          type: string
        collection:
          $ref: '#/components/schemas/CollectionVersionDetailCollection'
    CollectionVersionsPage:
      description: 'A page of a list of CollectionVersionLinks'
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
        next:
          $ref: '#/components/schemas/PageNext'
        previous:
          $ref: '#/components/schemas/PagePrevious'
        results:
          description: 'List of CollectionVersionLinks for this Page'
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionLink'
    User:
      description: 'A v1 User'
      type: object
      properties:
        active:
          readOnly: true
          type: string
        avatar_url:
          maxLength: 256
          type: string
        created:
          description: Timestamp when this user was created.
          readOnly: true
          type: string
        date_joined:
          format: date-time
          type: string
        full_name:
          maxLength: 254
          type: string
        id:
          description: Database ID for this user.
          readOnly: true
          type: integer
        modified:
          description: Timestamp when this user was last modified.
          readOnly: true
          type: string
        related:
          description: Data structure with URLs of related resources.
          readOnly: true
          type: string
        staff:
          readOnly: true
          type: string
        summary_fields:
          description: >-
            Data structure with name/description for related
            resources.
          readOnly: true
          type: string
        url:
          description: URL for this user.
          readOnly: true
          type: string
        username:
          description: >-
            Required. 30 characters or fewer. Letters, numbers and
            @/./+/-/_ characters
          maxLength: 30
          pattern: '^[a-zA-Z0-9_.@+-]+$'
          type: string
      required:
        - username
    Tag:
      description: 'A v1 galaxy Tag'
      type: object
      properties:
        active:
          readOnly: true
          type: string
        created:
          description: Timestamp when this tag was created.
          readOnly: true
          type: string
        id:
          description: Database ID for this tag.
          readOnly: true
          type: integer
        modified:
          description: Timestamp when this tag was last modified.
          readOnly: true
          type: string
        name:
          maxLength: 512
          type: string
        related:
          description: Data structure with URLs of related resources.
          readOnly: true
          type: string
        summary_fields:
          description: >-
            Data structure with name/description for related
            resources.
          readOnly: true
          type: string
        url:
          description: URL for this tag.
          readOnly: true
          type: string
      required:
        - name
    Content:
      type: object
      properties:
        active:
          readOnly: true
          type: string
        company:
          maxLength: 50
          nullable: true
          type: string
        created:
          description: Timestamp when this content was created.
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
        download_count:
          readOnly: true
          type: string
        download_rank:
          type: number
        id:
          description: Database ID for this content.
          readOnly: true
          type: integer
        imported:
          format: date-time
          nullable: true
          type: string
        is_valid:
          readOnly: true
          type: boolean
        license:
          maxLength: 50
          type: string
        min_ansible_version:
          maxLength: 10
          nullable: true
          type: string
        modified:
          description: Timestamp when this content was last modified.
          readOnly: true
          type: string
        name:
          maxLength: 512
          type: string
        related:
          description: Data structure with URLs of related resources.
          readOnly: true
          type: string
        relevance:
          type: number
        role_type:
          readOnly: true
          type: string
        search_rank:
          type: number
        summary_fields:
          description: >-
            Data structure with name/description for related
            resources.
          readOnly: true
          type: string
        travis_status_url:
          readOnly: true
          type: string
        url:
          description: URL for this content.
          readOnly: true
          type: string
        username:
          readOnly: true
          type: string
      required:
        - name
        - relevance
        - search_rank
        - download_rank
    ContentsPage:
      description: "A page of a list of Contents"
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
        next:
          $ref: '#/components/schemas/PageNext'
        previous:
          $ref: '#/components/schemas/PagePrevious'
        results:
          description: 'List of Contents for this Page'
          type: array
          items:
            $ref: '#/components/schemas/Content'     
    TagsPage:
      description: "A page of a list of Galaxy Tags"
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
        next:
          $ref: '#/components/schemas/PageNext'
        previous:
          $ref: '#/components/schemas/PagePrevious'
        results:
          description: 'List of Tags for this Page'
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    UsersPage:
      description: "A page of a list of Users"
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
        next:
          $ref: '#/components/schemas/PageNext'
        previous:
          $ref: '#/components/schemas/PagePrevious'
        results:
          description: 'List of Users for this Page'
          type: array
          items:
            $ref: '#/components/schemas/User'
    NamespacesPage:
      description: "A Page of a list of Namespaces"
      type: object
      properties:
        count:
          $ref: '#/components/schemas/PageCount'
        next:
          $ref: '#/components/schemas/PageNext'
        previous:
          $ref: '#/components/schemas/PagePrevious'
        results:
          description: 'List of Namespaces for this Page'
          type: array
          items:
            $ref: '#/components/schemas/Namespace' 
    CreateCollectionResult:
      description: 'A map of collection import task info, including its url'
      type: object
      properties:
        task:
          description: 'The url for the queued collection import task. Check it for progress and status.'
          type: string
    Namespace:
      description: 'A Namespace'
      type: object
      properties:
        active:
          readOnly: true
          type: string
        avatar_url:
          maxLength: 256
          nullable: true
          type: string
        company:
          maxLength: 256
          nullable: true
          type: string
        created:
          description: Timestamp when this namespace was created.
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
        email:
          maxLength: 256
          nullable: true
          type: string
        html_url:
          maxLength: 256
          nullable: true
          type: string
        id:
          description: Database ID for this namespace.
          readOnly: true
          type: integer
        is_vendor:
          type: boolean
        location:
          maxLength: 256
          nullable: true
          type: string
        modified:
          description: Timestamp when this namespace was last modified.
          readOnly: true
          type: string
        name:
          maxLength: 512
          type: string
        related:
          description: Data structure with URLs of related resources.
          readOnly: true
          type: string
        summary_fields:
          description: >-
            Data structure with name/description for related
            resources.
          readOnly: true
          type: string
        url:
          description: URL for this namespace.
          readOnly: true
          type: string
      required:
        - name
    SearchRolesResult:
      type: object
      properties:
        active:
          readOnly: true
          type: string
        company:
          maxLength: 50
          nullable: true
          type: string
        created:
          description: Timestamp when this content was created.
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
        download_count:
          readOnly: true
          type: string
        download_rank:
          type: number
        id:
          description: Database ID for this content.
          readOnly: true
          type: integer
        imported:
          format: date-time
          nullable: true
          type: string
        is_valid:
          readOnly: true
          type: boolean
        license:
          maxLength: 50
          type: string
        min_ansible_version:
          maxLength: 10
          nullable: true
          type: string
        modified:
          description: Timestamp when this content was last modified.
          readOnly: true
          type: string
        name:
          maxLength: 512
          type: string
        related:
          description: Data structure with URLs of related resources.
          readOnly: true
          type: string
        relevance:
          type: number
        role_type:
          readOnly: true
          type: string
        search_rank:
          type: number
        summary_fields:
          description: >-
            Data structure with name/description for related
            resources.
          readOnly: true
          type: string
        travis_status_url:
          readOnly: true
          type: string
        url:
          description: URL for this content.
          readOnly: true
          type: string
        username:
          readOnly: true
          type: string
      required:
        - name
        - relevance
        - search_rank
        - download_rank
  responses:
    Conflict:
      description: 'Conflict Error'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ConflictError'
            discriminator:
              propertyName: code
              mapping:
                conflict: '#/components/schemas/ConflictError'
                conflict.collection_exists: '#/components/schemas/ConflictCollectionExistsError'
                conflict.repository_name_conflict: '#/compontents/schemas/RepositoryNameError'
                conflict.artifact_exists: '#/compontents/schemas/ArtifactExistsError'
    Unauthorized:
      description: 'Authorization error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIException'
    CollectionVersions:
      description: 'Response containing a page of CollectionVersionLinks'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionVersionsPage'
    CreateCollectionResult:
      description: 'Result of collection import task with task url'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCollectionResult'
    Contents:
      description: 'Response containing a Page of Content search results'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentsPage'
    Users:
      description: 'Response containing a Page of a list of Users'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersPage'
    Namespaces:
      description: 'Response containing a Page of a list of Namespaces'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NamespacesPage'
    Tags:
      description: 'Response containing a Page of a list of Tags'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsPage'

  parameters:
    Page:
      description: A page number within the paginated result set.
      in: query
      name: page
      required: false
      schema:
        type: integer
        default: 1
    PageSize:
      description: Number of results to return per page.
      in: query
      name: page_size
      required: false
      schema:
        type: integer
        default: 10
        minimum: 0
        maximum: 1000
    Search:
      description: A search term.
      in: query
      name: search
      required: false
      schema:
        type: string
    CollectionNamespace:
      description: 'The collection namespace'
      in: path
      name: namespace
      required: true
      schema:
        type: string
    CollectionName:
      description: 'The collection name'
      in: path
      name: name
      required: true
      schema:
        type: string
        pattern: ^(?!.*__)[a-z]+[0-9a-z_]*$'
    CollectionVersion:
      description: 'A semantic version string'
      in: path
      name: version
      required: true
      schema:
        type: string
        pattern: ^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$
externalDocs:
  url: https://galaxy.ansible.com/docs/
tags:
  - name: Collections
    externalDocs:
      url: https://galaxy.ansible.com/docs/contributing/creating_collections.html
      description: Creating Collections docs at galaxy.ansible.com
  - name: Collection-Imports
  - name: Collection-Versions
  - name: Download
  - name: Introspection
    description: API used to gather information about the API itself
  - name: v2
    description: API endpoints from the v2 API
  - name: Notifications
  - name: Me
    description: API endpoints related to the current user.
  - name: Search
  - name: Namespaces
  - name: Tags
    description: API endpoint for Ansible Galaxy tags.
  - name: Users
  - name: v1
    description: API endpoints from the v1 API.
  - name: Internal
    description: API endpoints used by the web user interface. These endpoints are not part of the stable Galaxy API and may change at any time.